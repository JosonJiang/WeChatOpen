<template>
  <view style="margin-top: 200rpx">
    <i-button type="ghost" bind:click="handleOpen1">一般用法</i-button>
    <i-button type="ghost" bind:click="handleOpen2">带有提示、异步</i-button>
  </view>

  <i-action-sheet visible="{{visible1}}" actions="{{actions1}}"  showCancel="{{false}}"  bind:cancel="handleCancel1" bind:click="handleClickItem1">
  </i-action-sheet>

  <i-action-sheet visible="{{visible2}}" actions="{{actions2}}"  showCancel="{{true}}" bind:cancel="handleCancel2" bind:click="handleClickItem2" mask-closable="{{false}}" >
    <view slot="header" style="padding: 32rpx">
      <view style="color: #444;font-size: 32rpx">确定吗？</view>
      <text>删除后无法恢复哦</text>
    </view>
  </i-action-sheet>


</template>

<script>

//  const  { $Message } = require('../base/index');

export default {
  config: {
    navigationBarTitleText: "ActionSheet 动作面板",
    usingComponents: {
      'wxc-card': 'wxc-card',
      "i-action-sheet": 'wxc-actionsheet',
      "i-button": 'wxc-button'

    }
  },

  data: {
    visible1: false,
//    visible2: false,
    actions1: [
      {
        name: '选项1',
      },
      {
        name: '选项2'
      },
      {
        name: '去分享',
        icon: 'share',
        openType: 'share'
      }
    ],
    actions2: [
      {
        name: '删除',
        color: '#ed3f14'
      }
    ]
  },

  onShareAppMessage() {
    return {
      title: 'iView Weapp',
      imageUrl: 'https://file.iviewui.com/iview-weapp-logo.png'
    };
  },

  handleOpen1 (e) {

    this.setData({
      visible1: true
    });
  },

  handleCancel1 () {

    this.setData({
      visible1: false
    });
  },

  handleOpen2 (e) {

    this.setData({
      visible2: true
    });
    console.log(e);
  },

  handleCancel2 () {
    this.setData({
      visible2: false
    });
  },

  handleClickItem1 ({ detail }) {

    const index = detail.index + 1;

    let  content= '点击了选项' + index;
    console.log(content);

//    $Message({
//      content: content
//    });

  },

  handleClickItem2 () {

    const action = [...this.data.actions2];
    action[0].loading = true;

    this.setData({
      actions2: action
    });

    setTimeout(() => {

      action[0].loading = false;
      this.setData({
        visible2: false,
        actions2: action
      });

      let  content= '删除成功';
      console.log(content);

//      $Message({
//        content: '删除成功！',
//        type: 'success'
//      });


    }, 2000);

  }

}
</script>

<style>
</style>
